var group__group__vision__functions =
[
    [ "Absolute Difference", "dc/ddf/group__group__vision__function__absdiff.html", "dc/ddf/group__group__vision__function__absdiff" ],
    [ "Accumulate", "d0/d77/group__group__vision__function__accumulate.html", "d0/d77/group__group__vision__function__accumulate" ],
    [ "Accumulate Squared", "d0/d2c/group__group__vision__function__accumulate__square.html", "d0/d2c/group__group__vision__function__accumulate__square" ],
    [ "Data Object Copy", "d2/dab/group__group__vision__function__copy.html", "d2/dab/group__group__vision__function__copy" ],
    [ "Accumulate Weighted", "d2/d2e/group__group__vision__function__accumulate__weighted.html", "d2/d2e/group__group__vision__function__accumulate__weighted" ],
    [ "Arithmetic Addition", "d6/db0/group__group__vision__function__add.html", "d6/db0/group__group__vision__function__add" ],
    [ "Arithmetic Subtraction", "d6/d6d/group__group__vision__function__sub.html", "d6/d6d/group__group__vision__function__sub" ],
    [ "Bitwise AND", "d4/d4e/group__group__vision__function__and.html", "d4/d4e/group__group__vision__function__and" ],
    [ "Bitwise EXCLUSIVE OR", "d3/dd1/group__group__vision__function__xor.html", "d3/dd1/group__group__vision__function__xor" ],
    [ "Bitwise INCLUSIVE OR", "d2/d5d/group__group__vision__function__or.html", "d2/d5d/group__group__vision__function__or" ],
    [ "Bitwise NOT", "dc/d06/group__group__vision__function__not.html", "dc/d06/group__group__vision__function__not" ],
    [ "Box Filter", "da/d7c/group__group__vision__function__box__image.html", "da/d7c/group__group__vision__function__box__image" ],
    [ "Non-Maxima Suppression", "d4/d2f/group__group__vision__function__nms.html", "d4/d2f/group__group__vision__function__nms" ],
    [ "Canny Edge Detector", "d7/d71/group__group__vision__function__canny.html", "d7/d71/group__group__vision__function__canny" ],
    [ "Channel Combine", "de/df2/group__group__vision__function__channelcombine.html", "de/df2/group__group__vision__function__channelcombine" ],
    [ "Channel Extract", "dd/dc1/group__group__vision__function__channelextract.html", "dd/dc1/group__group__vision__function__channelextract" ],
    [ "Color Convert", "d1/dc2/group__group__vision__function__colorconvert.html", "d1/dc2/group__group__vision__function__colorconvert" ],
    [ "Convert Bit depth", "de/d73/group__group__vision__function__convertdepth.html", "de/d73/group__group__vision__function__convertdepth" ],
    [ "Custom Convolution", "d3/d3b/group__group__vision__function__custom__convolution.html", "d3/d3b/group__group__vision__function__custom__convolution" ],
    [ "Dilate Image", "dc/d73/group__group__vision__function__dilate__image.html", "dc/d73/group__group__vision__function__dilate__image" ],
    [ "Equalize Histogram", "d1/d70/group__group__vision__function__equalize__hist.html", "d1/d70/group__group__vision__function__equalize__hist" ],
    [ "Erode Image", "dc/dff/group__group__vision__function__erode__image.html", "dc/dff/group__group__vision__function__erode__image" ],
    [ "Fast Corners", "dd/d22/group__group__vision__function__fast.html", "dd/d22/group__group__vision__function__fast" ],
    [ "Gaussian Filter", "d6/d58/group__group__vision__function__gaussian__image.html", "d6/d58/group__group__vision__function__gaussian__image" ],
    [ "Non Linear Filter", "d5/dc5/group__group__vision__function__nonlinear__filter.html", "d5/dc5/group__group__vision__function__nonlinear__filter" ],
    [ "Harris Corners", "d7/d5f/group__group__vision__function__harris.html", "d7/d5f/group__group__vision__function__harris" ],
    [ "Histogram", "d6/dcb/group__group__vision__function__histogram.html", "d6/dcb/group__group__vision__function__histogram" ],
    [ "Gaussian Image Pyramid", "d0/d15/group__group__vision__function__gaussian__pyramid.html", "d0/d15/group__group__vision__function__gaussian__pyramid" ],
    [ "Laplacian Image Pyramid", "dc/d60/group__group__vision__function__laplacian__pyramid.html", "dc/d60/group__group__vision__function__laplacian__pyramid" ],
    [ "Reconstruction from a Laplacian Image Pyramid", "dd/daa/group__group__vision__function__laplacian__reconstruct.html", "dd/daa/group__group__vision__function__laplacian__reconstruct" ],
    [ "Integral Image", "d0/d7b/group__group__vision__function__integral__image.html", "d0/d7b/group__group__vision__function__integral__image" ],
    [ "Magnitude", "dd/df2/group__group__vision__function__magnitude.html", "dd/df2/group__group__vision__function__magnitude" ],
    [ "Mean and Standard Deviation", "d8/d85/group__group__vision__function__meanstddev.html", "d8/d85/group__group__vision__function__meanstddev" ],
    [ "Median Filter", "d3/d77/group__group__vision__function__median__image.html", "d3/d77/group__group__vision__function__median__image" ],
    [ "Min, Max Location", "d8/d05/group__group__vision__function__minmaxloc.html", "d8/d05/group__group__vision__function__minmaxloc" ],
    [ "Min", "d9/db5/group__group__vision__function__min.html", "d9/db5/group__group__vision__function__min" ],
    [ "Max", "d3/d2c/group__group__vision__function__max.html", "d3/d2c/group__group__vision__function__max" ],
    [ "Optical Flow Pyramid (LK)", "d0/d0c/group__group__vision__function__opticalflowpyrlk.html", "d0/d0c/group__group__vision__function__opticalflowpyrlk" ],
    [ "Phase", "db/d4e/group__group__vision__function__phase.html", "db/d4e/group__group__vision__function__phase" ],
    [ "Pixel-wise Multiplication", "d7/dae/group__group__vision__function__mult.html", "d7/dae/group__group__vision__function__mult" ],
    [ "Remap", "df/dca/group__group__vision__function__remap.html", "df/dca/group__group__vision__function__remap" ],
    [ "Scale Image", "d1/d26/group__group__vision__function__scale__image.html", "d1/d26/group__group__vision__function__scale__image" ],
    [ "Sobel 3x3", "da/d4b/group__group__vision__function__sobel3x3.html", "da/d4b/group__group__vision__function__sobel3x3" ],
    [ "TableLookup", "d5/d4e/group__group__vision__function__lut.html", "d5/d4e/group__group__vision__function__lut" ],
    [ "Thresholding", "d3/d1e/group__group__vision__function__threshold.html", "d3/d1e/group__group__vision__function__threshold" ],
    [ "Warp Affine", "d5/d5f/group__group__vision__function__warp__affine.html", "d5/d5f/group__group__vision__function__warp__affine" ],
    [ "Warp Perspective", "da/d6a/group__group__vision__function__warp__perspective.html", "da/d6a/group__group__vision__function__warp__perspective" ],
    [ "Bilateral Filter", "de/df5/group__group__vision__function__bilateral__filter.html", "de/df5/group__group__vision__function__bilateral__filter" ],
    [ "MatchTemplate", "dc/db3/group__group__vision__function__match__template.html", "dc/db3/group__group__vision__function__match__template" ],
    [ "LBP", "d1/d9e/group__group__vision__function__lbp.html", "d1/d9e/group__group__vision__function__lbp" ],
    [ "HOG", "dc/df4/group__group__vision__function__hog.html", "dc/df4/group__group__vision__function__hog" ],
    [ "HoughLinesP", "d9/d99/group__group__vision__function__hough__lines__p.html", "d9/d99/group__group__vision__function__hough__lines__p" ],
    [ "Tensor Multiply", "dc/de1/group__group__vision__function__tensor__multiply.html", "dc/de1/group__group__vision__function__tensor__multiply" ],
    [ "Tensor Add", "d3/d9e/group__group__vision__function__tensor__add.html", "d3/d9e/group__group__vision__function__tensor__add" ],
    [ "Tensor Subtract", "d3/d65/group__group__vision__function__tensor__subtract.html", "d3/d65/group__group__vision__function__tensor__subtract" ],
    [ "Tensor TableLookUp", "d2/d70/group__group__vision__function__tensor__tablelookup.html", "d2/d70/group__group__vision__function__tensor__tablelookup" ],
    [ "Tensor Transpose", "dd/daf/group__group__vision__function__tensor__transpose.html", "dd/daf/group__group__vision__function__tensor__transpose" ],
    [ "Tensor Convert Bit-Depth", "d8/d92/group__group__vision__function__tensor__convert__depth.html", "d8/d92/group__group__vision__function__tensor__convert__depth" ],
    [ "Tensor Matrix Multiply", "dd/d12/group__group__vision__function__tensor__matrix__multiply.html", "dd/d12/group__group__vision__function__tensor__matrix__multiply" ]
];